swagger: "2.0"
info:
  description: Implementing a User API with a Cassandra backend
  title: A User API with Cassandra backend
  version: 1.0.0
produces:
- application/json
consumes:
- application/json
schemes:
- http
paths:
  /user:
    get:
      tags:
        - users
      operationId: getAll
      responses:
        200:
          description: List the users
          schema:
            type: array
            items:
              $ref: "#/definitions/user"
        default:
          description: An error occured (GET /user)
          schema:
            $ref: "#/definitions/error"
    post:
      tags:
        - users
      operationId: createOne
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/user"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/user"
        default:
          description: An error occured (POST user)
          schema:
            $ref: "#/definitions/error"
  /user/{id}:
    parameters:
      - type: string
        name: id
        in: path
        required: true
    get:
      tags:
        - users
      operationId: getOne
      responses:
        200:
          description: User with specific id
          schema:
            $ref: "#/definitions/user"
        default:
          description: An error occured(GET /user/{id})
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
        - users
      operationId: deleteOne
      responses:
        204:
          description: Deleted
        default:
          description: An error occured (DELETE /user/{id})
          schema:
            $ref: "#/definitions/error"
    patch:
      tags:
        - users
      operationId: patchOne
      responses:
        200:
          description: Patch user with specific id
          schema:
            $ref: "#/definitions/user"
definitions:
  user:
    type: object
    required:
    - username
    - first_name
    - last_name
    properties:
      id:
        type: string
        readOnly: true
      username:
        type: string
        minLength: 6
      first_name:
        type: string
        minLength: 3
      last_name:
        type: string
        minLength: 3
  error:
    type: object
    required:
    - status
    properties:
      status_code:
        type: integer
        format: int64
      status:
        type: string
